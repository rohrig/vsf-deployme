'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var axios = require('axios');
var middleware = require('@vue-storefront/middleware');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var axios__default = /*#__PURE__*/_interopDefaultLegacy(axios);

const exampleEndpoint = async (context, params) => {
    console.log('exampleEndpoint has been called');
    // Example request could look like this:
    // return await context.client.get(`example-url?id=${params.id}`);
    return { data: 'Hello, Vue Storefront Integrator!' };
};

const getProduct = async (context, params) => {
    console.log('getProduct has been called');
    const product = await fetch('https://fakestoreapi.com/products/1')
        .then(res => res.json())
        .then(json => json);
    return product;
};

var apiEndpoints = /*#__PURE__*/Object.freeze({
  __proto__: null,
  exampleEndpoint: exampleEndpoint,
  getProduct: getProduct
});

/**
 * In here you should create the client you'll use to communicate with the backend.
 * Axios is just an example.
 */
const buildClient = () => {
    const axiosInstance = axios__default["default"].create();
    return axiosInstance;
};
const onCreate = (settings) => {
    const client = buildClient();
    return {
        config: settings,
        client
    };
};
const { createApiClient } = middleware.apiClientFactory({
    onCreate,
    api: apiEndpoints,
});

exports.createApiClient = createApiClient;
//# sourceMappingURL=index.js.map
